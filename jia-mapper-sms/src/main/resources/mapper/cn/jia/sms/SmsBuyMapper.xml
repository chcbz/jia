<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.jia.sms.dao.SmsBuyMapper" >
  <resultMap id="BaseResultMap" type="cn.jia.sms.entity.SmsBuy" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="client_id" property="clientId" jdbcType="VARCHAR" />
    <result column="number" property="number" jdbcType="INTEGER" />
    <result column="money" property="money" jdbcType="DOUBLE" />
    <result column="total" property="total" jdbcType="INTEGER" />
    <result column="remain" property="remain" jdbcType="INTEGER" />
    <result column="time" property="time" jdbcType="BIGINT" />
    <result column="status" property="status" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, client_id, number, money, total, remain, time, status
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from sms_buy
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from sms_buy
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.jia.sms.entity.SmsBuy" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into sms_buy (client_id, number, money, 
      total, remain, time, 
      status)
    values (#{clientId,jdbcType=VARCHAR}, #{number,jdbcType=INTEGER}, #{money,jdbcType=DOUBLE}, 
      #{total,jdbcType=INTEGER}, #{remain,jdbcType=INTEGER}, #{time,jdbcType=BIGINT}, 
      #{status,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="cn.jia.sms.entity.SmsBuy" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into sms_buy
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="clientId != null" >
        client_id,
      </if>
      <if test="number != null" >
        number,
      </if>
      <if test="money != null" >
        money,
      </if>
      <if test="total != null" >
        total,
      </if>
      <if test="remain != null" >
        remain,
      </if>
      <if test="time != null" >
        time,
      </if>
      <if test="status != null" >
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="clientId != null" >
        #{clientId,jdbcType=VARCHAR},
      </if>
      <if test="number != null" >
        #{number,jdbcType=INTEGER},
      </if>
      <if test="money != null" >
        #{money,jdbcType=DOUBLE},
      </if>
      <if test="total != null" >
        #{total,jdbcType=INTEGER},
      </if>
      <if test="remain != null" >
        #{remain,jdbcType=INTEGER},
      </if>
      <if test="time != null" >
        #{time,jdbcType=BIGINT},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.jia.sms.entity.SmsBuy" >
    update sms_buy
    <set >
      <if test="clientId != null" >
        client_id = #{clientId,jdbcType=VARCHAR},
      </if>
      <if test="number != null" >
        number = #{number,jdbcType=INTEGER},
      </if>
      <if test="money != null" >
        money = #{money,jdbcType=DOUBLE},
      </if>
      <if test="total != null" >
        total = #{total,jdbcType=INTEGER},
      </if>
      <if test="remain != null" >
        remain = #{remain,jdbcType=INTEGER},
      </if>
      <if test="time != null" >
        time = #{time,jdbcType=BIGINT},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.jia.sms.entity.SmsBuy" >
    update sms_buy
    set client_id = #{clientId,jdbcType=VARCHAR},
      number = #{number,jdbcType=INTEGER},
      money = #{money,jdbcType=DOUBLE},
      total = #{total,jdbcType=INTEGER},
      remain = #{remain,jdbcType=INTEGER},
      time = #{time,jdbcType=BIGINT},
      status = #{status,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="selectLastest" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from sms_buy
    where client_id = #{clientId,jdbcType=VARCHAR} and status <![CDATA[ <> ]]> 2
    order by id desc limit 1
  </select>
  <select id="selectByExamplePage" parameterType="cn.jia.sms.entity.SmsBuyExample" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from sms_buy
    <where>
      client_id = #{clientId,jdbcType=VARCHAR}
      <if test="status != null">
        and status = #{status,jdbcType=INTEGER}
      </if>
      <if test="timeStart != null">
        and time >= #{timeStart,jdbcType=BIGINT}
      </if>
      <if test="timeEnd != null">
        and #{timeEnd,jdbcType=BIGINT} >= time
      </if>
    </where>
    order by id desc
  </select>
</mapper>