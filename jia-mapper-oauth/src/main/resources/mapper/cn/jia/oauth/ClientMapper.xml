<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.jia.oauth.dao.ClientMapper">
  <resultMap id="BaseResultMap" type="cn.jia.oauth.entity.Client">
    <id column="client_id" jdbcType="VARCHAR" property="clientId" />
    <result column="client_secret" jdbcType="VARCHAR" property="clientSecret" />
    <result column="appcn" jdbcType="VARCHAR" property="appcn" />
    <result column="resource_ids" jdbcType="VARCHAR" property="resourceIds" typeHandler="cn.jia.core.mybatis.typehandler.StringSetTypeHandler"/>
    <result column="authorized_grant_types" jdbcType="VARCHAR" property="authorizedGrantTypes" typeHandler="cn.jia.core.mybatis.typehandler.StringSetTypeHandler"/>
    <result column="registered_redirect_uris" jdbcType="VARCHAR" property="registeredRedirectUris" typeHandler="cn.jia.core.mybatis.typehandler.StringSetTypeHandler"/>
    <result column="scope" jdbcType="VARCHAR" property="scope" typeHandler="cn.jia.core.mybatis.typehandler.StringSetTypeHandler"/>
    <result column="autoapprove" jdbcType="VARCHAR" property="autoApproveScopes" typeHandler="cn.jia.core.mybatis.typehandler.StringSetTypeHandler"/>
    <result column="access_token_validity_seconds" jdbcType="INTEGER" property="accessTokenValiditySeconds" />
    <result column="refresh_token_validity_seconds" jdbcType="INTEGER" property="refreshTokenValiditySeconds" />
  </resultMap>
  <sql id="Base_Column_List">
    client_id, client_secret, appcn, resource_ids, authorized_grant_types, registered_redirect_uris, 
    scope, autoapprove, access_token_validity_seconds, refresh_token_validity_seconds
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from oauth_client
    where client_id = #{clientId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from oauth_client
    where client_id = #{clientId,jdbcType=VARCHAR}
  </delete>
  
  <insert id="insert" parameterType="cn.jia.oauth.entity.Client">
    insert into oauth_client (client_id, client_secret, appcn, resource_ids, 
      authorized_grant_types, registered_redirect_uris, scope,
      autoapprove, access_token_validity_seconds, refresh_token_validity_seconds
      )
    values (#{clientId,jdbcType=VARCHAR}, #{clientSecret,jdbcType=VARCHAR}, #{appcn,jdbcType=VARCHAR}, 
		<foreach collection="resourceIds" open="'" close="'," separator="," item="resourceId">${resourceId}</foreach>
		<foreach collection="authorizedGrantTypes" open="'" close="'," separator="," item="authorizedGrantType">${authorizedGrantType}</foreach>
		<foreach collection="registeredRedirectUris" open="'" close="'," separator="," item="registeredRedirectUri">${registeredRedirectUri}</foreach>
		<foreach collection="scope" open="'" close="'," separator="," item="s">${s}</foreach>
        <foreach collection="autoApproveScopes" open="'" close="'," separator="," item="autoApproveScope">${autoApproveScope}</foreach>
      #{accessTokenValiditySeconds,jdbcType=INTEGER}, #{refreshTokenValiditySeconds,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.jia.oauth.entity.Client">
    insert into oauth_client
    <trim prefix="(" suffix=")" suffixOverrides=",">
      client_id,
      <if test="clientSecret != null">
        client_secret,
      </if>
      <if test="appcn != null">
        appcn,
      </if>
      <if test="resourceIds != null and resourceIds.size > 0">
        resource_ids,
      </if>
      <if test="authorizedGrantTypes != null and authorizedGrantTypes.size > 0">
        authorized_grant_types,
      </if>
      <if test="registeredRedirectUris != null and registeredRedirectUris.size > 0">
        registered_redirect_uris,
      </if>
      <if test="scope != null and scope.size > 0">
        scope,
      </if>
      <if test="autoApproveScopes != null and autoApproveScopes.size > 0">
        autoapprove,
      </if>
      <if test="accessTokenValiditySeconds != null">
        access_token_validity_seconds,
      </if>
      <if test="refreshTokenValiditySeconds != null">
        refresh_token_validity_seconds,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      #{clientId,jdbcType=VARCHAR},
      <if test="clientSecret != null">
        #{clientSecret,jdbcType=VARCHAR},
      </if>
      <if test="appcn != null">
        #{appcn,jdbcType=VARCHAR},
      </if>
      <if test="resourceIds != null and resourceIds.size() > 0">
        <foreach collection="resourceIds" open="'" close="'," separator="," item="resourceId">${resourceId}</foreach>
      </if>
      <if test="authorizedGrantTypes != null and authorizedGrantTypes.size > 0">
        <foreach collection="authorizedGrantTypes" open="'" close="'," separator="," item="authorizedGrantType">${authorizedGrantType}</foreach>
      </if>
      <if test="registeredRedirectUris != null and registeredRedirectUris.size > 0">
        <foreach collection="registeredRedirectUris" open="'" close="'," separator="," item="registeredRedirectUri">${registeredRedirectUri}</foreach>
      </if>
      <if test="scope != null and scope.size > 0">
        <foreach collection="scope" open="'" close="'," separator="," item="s">${s}</foreach>
      </if>
      <if test="autoApproveScopes != null and autoApproveScopes.size > 0">
        <foreach collection="autoApproveScopes" open="'" close="'," separator="," item="autoApproveScope">${autoApproveScope}</foreach>
      </if>
      <if test="accessTokenValiditySeconds != null">
        #{accessTokenValiditySeconds,jdbcType=INTEGER},
      </if>
      <if test="refreshTokenValiditySeconds != null">
        #{refreshTokenValiditySeconds,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.jia.oauth.entity.Client">
    update oauth_client
    <set>
      <if test="clientSecret != null">
        client_secret = #{clientSecret,jdbcType=VARCHAR},
      </if>
      <if test="appcn != null">
        appcn = #{appcn,jdbcType=VARCHAR},
      </if>
      <if test="resourceIds != null and resourceIds.size > 0">
        <foreach collection="resourceIds" open="resource_ids = '" close="'," separator="," item="resourceId">${resourceId}</foreach>
      </if>
      <if test="authorizedGrantTypes != null and authorizedGrantTypes.size > 0">
        <foreach collection="authorizedGrantTypes" open="authorized_grant_types = '" close="'," separator="," item="authorizedGrantType">${authorizedGrantType}</foreach>
      </if>
      <if test="registeredRedirectUris != null and registeredRedirectUris.size > 0">
        <foreach collection="registeredRedirectUris" open="registered_redirect_uris = '" close="'," separator="," item="registeredRedirectUri">${registeredRedirectUri}</foreach>
      </if>
      <if test="scope != null and scope.size > 0">
        <foreach collection="scope" open="scope = '" close="'," separator="," item="sc">${sc}</foreach>
      </if>
      <if test="autoApproveScopes != null and autoApproveScopes.size > 0">
        <foreach collection="autoApproveScopes" open="autoapprove = '" close="'," separator="," item="autoApproveScope">${autoApproveScope}</foreach>
      </if>
      <if test="accessTokenValiditySeconds != null">
        access_token_validity_seconds = #{accessTokenValiditySeconds,jdbcType=INTEGER},
      </if>
      <if test="refreshTokenValiditySeconds != null">
        refresh_token_validity_seconds = #{refreshTokenValiditySeconds,jdbcType=INTEGER},
      </if>
    </set>
    where client_id = #{clientId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.jia.oauth.entity.Client">
    update oauth_client
    set client_secret = #{clientSecret,jdbcType=VARCHAR},
      appcn = #{appcn,jdbcType=VARCHAR},
		<foreach collection="resourceIds" open="resource_ids = '" close="'," separator="," item="resourceId">${resourceId}</foreach>
		<foreach collection="authorizedGrantTypes" open="authorized_grant_types = '" close="'," separator="," item="authorizedGrantType">${authorizedGrantType}</foreach>
		<foreach collection="registeredRedirectUris" open="registered_redirect_uris = '" close="'," separator="," item="registeredRedirectUri">${registeredRedirectUri}</foreach>
		<foreach collection="scope" open="scope = '" close="'," separator="," item="sc">${sc}</foreach>
        <foreach collection="autoApproveScopes" open="autoapprove = '" close="'," separator="," item="autoApproveScope">${autoApproveScope}</foreach>
      access_token_validity_seconds = #{accessTokenValiditySeconds,jdbcType=INTEGER},
      refresh_token_validity_seconds = #{refreshTokenValiditySeconds,jdbcType=INTEGER}
    where client_id = #{clientId,jdbcType=VARCHAR}
  </update>
  
  <select id="selectByAppcn" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from oauth_client
    where appcn = #{appcn,jdbcType=VARCHAR}
  </select>
</mapper>