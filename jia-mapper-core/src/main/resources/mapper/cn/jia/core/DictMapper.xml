<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.jia.core.dao.DictMapper">

  <cache type="cn.jia.core.mybatis.RedisCache">
    <property name="eviction" value="LRU" />
    <property name="flushInterval" value="6000000" />
    <property name="size" value="1024" />
    <property name="readOnly" value="false" />
  </cache>

  <resultMap id="BaseResultMap" type="cn.jia.core.entity.Dict">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="language" jdbcType="VARCHAR" property="language" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="value" jdbcType="VARCHAR" property="value" />
    <result column="url" jdbcType="VARCHAR" property="url" />
    <result column="parent_id" jdbcType="VARCHAR" property="parentId" />
    <result column="dict_order" jdbcType="INTEGER" property="dictOrder" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="update_time" jdbcType="INTEGER" property="updateTime" />
    <result column="create_time" jdbcType="INTEGER" property="createTime" />
    <result column="status" jdbcType="INTEGER" property="status" />
  </resultMap>
  <sql id="Base_Column_List">
    id, type, language, name, value, url, parent_id, dict_order, description, update_time, 
    create_time, status
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from core_dict
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from core_dict
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.jia.core.entity.Dict">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into core_dict (type, language, name, 
      value, url, parent_id, 
      dict_order, description, update_time, 
      create_time, status)
    values (#{type,jdbcType=VARCHAR}, #{language,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{value,jdbcType=VARCHAR}, #{url,jdbcType=VARCHAR}, #{parentId,jdbcType=VARCHAR}, 
      #{dictOrder,jdbcType=INTEGER}, #{description,jdbcType=VARCHAR}, #{updateTime,jdbcType=INTEGER}, 
      #{createTime,jdbcType=INTEGER}, #{status,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="cn.jia.core.entity.Dict">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into core_dict
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="type != null">
        type,
      </if>
      <if test="language != null">
        language,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="value != null">
        value,
      </if>
      <if test="url != null">
        url,
      </if>
      <if test="parentId != null">
        parent_id,
      </if>
      <if test="dictOrder != null">
        dict_order,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="status != null">
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="language != null">
        #{language,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="value != null">
        #{value,jdbcType=VARCHAR},
      </if>
      <if test="url != null">
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null">
        #{parentId,jdbcType=VARCHAR},
      </if>
      <if test="dictOrder != null">
        #{dictOrder,jdbcType=INTEGER},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.jia.core.entity.Dict">
    update core_dict
    <set>
      <if test="type != null">
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="language != null">
        language = #{language,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="value != null">
        value = #{value,jdbcType=VARCHAR},
      </if>
      <if test="url != null">
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null">
        parent_id = #{parentId,jdbcType=VARCHAR},
      </if>
      <if test="dictOrder != null">
        dict_order = #{dictOrder,jdbcType=INTEGER},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.jia.core.entity.Dict">
    update core_dict
    set type = #{type,jdbcType=VARCHAR},
      language = #{language,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      value = #{value,jdbcType=VARCHAR},
      url = #{url,jdbcType=VARCHAR},
      parent_id = #{parentId,jdbcType=VARCHAR},
      dict_order = #{dictOrder,jdbcType=INTEGER},
      description = #{description,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <select id="selectAll" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from core_dict
  </select>
  <select id="findByExamplePage" parameterType="cn.jia.core.entity.Dict" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from core_dict
    <where>
      <if test="type != null">
        type like #{type,jdbcType=VARCHAR}
      </if>
      <if test="language != null">
        and language = #{language,jdbcType=VARCHAR}
      </if>
      <if test="name != null">
        and name like #{name,jdbcType=VARCHAR}
      </if>
      <if test="value != null">
        and value like #{value,jdbcType=VARCHAR}
      </if>
      <if test="parentId != null">
        and parent_id = #{parentId,jdbcType=VARCHAR}
      </if>
      <if test="status != null">
        and status = #{status,jdbcType=INTEGER}
      </if>
    </where>
    order by type, dict_order
  </select>
  <insert id="upsert" parameterType="cn.jia.core.entity.Dict">
	insert into core_dict (type, language, name, 
      value, url, parent_id, 
      dict_order, description, update_time, 
      create_time)
    values (#{type,jdbcType=VARCHAR}, #{language,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{value,jdbcType=VARCHAR}, #{url,jdbcType=VARCHAR}, #{parentId,jdbcType=VARCHAR}, 
      #{dictOrder,jdbcType=INTEGER}, #{description,jdbcType=VARCHAR}, #{updateTime,jdbcType=INTEGER}, 
      #{createTime,jdbcType=INTEGER})
	on duplicate key update type = #{type,jdbcType=VARCHAR},
      language = #{language,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      value = #{value,jdbcType=VARCHAR},
      url = #{url,jdbcType=VARCHAR},
      parent_id = #{parentId,jdbcType=VARCHAR},
      dict_order = #{dictOrder,jdbcType=INTEGER},
      description = #{description,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER}
  </insert>
</mapper>