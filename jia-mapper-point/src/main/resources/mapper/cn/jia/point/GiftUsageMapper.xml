<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.jia.point.dao.GiftUsageMapper" >
  <resultMap id="BaseResultMap" type="cn.jia.point.entity.GiftUsage" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="client_id" property="clientId" jdbcType="VARCHAR" />
    <result column="gift_id" property="giftId" jdbcType="INTEGER" />
    <result column="jiacn" property="jiacn" jdbcType="VARCHAR" />
    <result column="quantity" property="quantity" jdbcType="INTEGER" />
    <result column="point" property="point" jdbcType="INTEGER" />
    <result column="price" property="price" jdbcType="INTEGER" />
    <result column="consignee" property="consignee" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="card_no" property="cardNo" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="time" property="time" jdbcType="BIGINT" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, client_id, gift_id, jiacn, quantity, point, price, consignee, phone, address, 
    card_no, status, time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from point_gift_usage
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from point_gift_usage
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.jia.point.entity.GiftUsage" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into point_gift_usage (client_id, gift_id, jiacn, 
      quantity, point, price, 
      consignee, phone, address, 
      card_no, status, time
      )
    values (#{clientId,jdbcType=VARCHAR}, #{giftId,jdbcType=INTEGER}, #{jiacn,jdbcType=VARCHAR}, 
      #{quantity,jdbcType=INTEGER}, #{point,jdbcType=INTEGER}, #{price,jdbcType=INTEGER}, 
      #{consignee,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, 
      #{cardNo,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, #{time,jdbcType=BIGINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.jia.point.entity.GiftUsage" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into point_gift_usage
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="clientId != null" >
        client_id,
      </if>
      <if test="giftId != null" >
        gift_id,
      </if>
      <if test="jiacn != null" >
        jiacn,
      </if>
      <if test="quantity != null" >
        quantity,
      </if>
      <if test="point != null" >
        point,
      </if>
      <if test="price != null" >
        price,
      </if>
      <if test="consignee != null" >
        consignee,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="address != null" >
        address,
      </if>
      <if test="cardNo != null" >
        card_no,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="time != null" >
        time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="clientId != null" >
        #{clientId,jdbcType=VARCHAR},
      </if>
      <if test="giftId != null" >
        #{giftId,jdbcType=INTEGER},
      </if>
      <if test="jiacn != null" >
        #{jiacn,jdbcType=VARCHAR},
      </if>
      <if test="quantity != null" >
        #{quantity,jdbcType=INTEGER},
      </if>
      <if test="point != null" >
        #{point,jdbcType=INTEGER},
      </if>
      <if test="price != null" >
        #{price,jdbcType=INTEGER},
      </if>
      <if test="consignee != null" >
        #{consignee,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="cardNo != null" >
        #{cardNo,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="time != null" >
        #{time,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.jia.point.entity.GiftUsage" >
    update point_gift_usage
    <set >
      <if test="clientId != null" >
        client_id = #{clientId,jdbcType=VARCHAR},
      </if>
      <if test="giftId != null" >
        gift_id = #{giftId,jdbcType=INTEGER},
      </if>
      <if test="jiacn != null" >
        jiacn = #{jiacn,jdbcType=VARCHAR},
      </if>
      <if test="quantity != null" >
        quantity = #{quantity,jdbcType=INTEGER},
      </if>
      <if test="point != null" >
        point = #{point,jdbcType=INTEGER},
      </if>
      <if test="price != null" >
        price = #{price,jdbcType=INTEGER},
      </if>
      <if test="consignee != null" >
        consignee = #{consignee,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="cardNo != null" >
        card_no = #{cardNo,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="time != null" >
        time = #{time,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.jia.point.entity.GiftUsage" >
    update point_gift_usage
    set client_id = #{clientId,jdbcType=VARCHAR},
      gift_id = #{giftId,jdbcType=INTEGER},
      jiacn = #{jiacn,jdbcType=VARCHAR},
      quantity = #{quantity,jdbcType=INTEGER},
      point = #{point,jdbcType=INTEGER},
      price = #{price,jdbcType=INTEGER},
      consignee = #{consignee,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      card_no = #{cardNo,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      time = #{time,jdbcType=BIGINT}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="selectByGiftId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from point_gift_usage
    where gift_id = #{giftId,jdbcType=INTEGER}
  </select>
  <select id="selectByUser" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from point_gift_usage
    where jiacn = #{jiacn,jdbcType=VARCHAR}
  </select>
  <select id="selectByExample" parameterType="cn.jia.point.entity.GiftUsageExample" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from point_gift
    <where>
      <if test="clientId != null and clientStrictFlag != 1">
        (client_id = #{clientId,jdbcType=VARCHAR} or client_id is null)
      </if>
      <if test="clientId != null and clientStrictFlag == 1">
        client_id = #{clientId,jdbcType=VARCHAR}
      </if>
      <if test="clientId == null and clientStrictFlag == 1">
        client_id is null
      </if>
      <if test="consignee != null">
        and consignee LIKE CONCAT('%',#{consignee,jdbcType=VARCHAR},'%')
      </if>
      <if test="address != null">
        and address LIKE CONCAT('%',#{address,jdbcType=VARCHAR},'%')
      </if>
      <if test="jiacn != null">
        and jiacn = #{jiacn,jdbcType=VARCHAR}
      </if>
      <if test="phone != null">
        and phone = #{phone,jdbcType=VARCHAR}
      </if>
      <if test="giftId != null">
        and gift_id = #{giftId,jdbcType=INTEGER}
      </if>
      <if test="status != null">
        and status = #{status,jdbcType=INTEGER}
      </if>
      <if test="timeStart != null">
        and time >= #{timeStart,jdbcType=BIGINT}
      </if>
      <if test="timeEnd != null">
        and #{timeEnd,jdbcType=BIGINT} >= time
      </if>
    </where>
  </select>
</mapper>