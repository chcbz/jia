<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.jia.user.dao.GroupMapper">
  <resultMap id="BaseResultMap" type="cn.jia.user.entity.Group">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="client_id" jdbcType="VARCHAR" property="clientId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="code" jdbcType="VARCHAR" property="code" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="create_time" jdbcType="BIGINT" property="createTime" />
    <result column="update_time" jdbcType="BIGINT" property="updateTime" />
    <result column="status" jdbcType="INTEGER" property="status" />
  </resultMap>
  <sql id="Base_Column_List">
    id, client_id, name, code, remark, create_time, update_time, status
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user_group
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user_group
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.jia.user.entity.Group">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into user_group (client_id, name, code, 
      remark, create_time, update_time, 
      status)
    values (#{clientId,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{code,jdbcType=VARCHAR}, 
      #{remark,jdbcType=VARCHAR}, #{createTime,jdbcType=BIGINT}, #{updateTime,jdbcType=BIGINT}, 
      #{status,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="cn.jia.user.entity.Group">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into user_group
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="clientId != null">
        client_id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="code != null">
        code,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="status != null">
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="clientId != null">
        #{clientId,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="code != null">
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.jia.user.entity.Group">
    update user_group
    <set>
      <if test="clientId != null">
        client_id = #{clientId,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="code != null">
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.jia.user.entity.Group">
    update user_group
    set client_id = #{clientId,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      code = #{code,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      status = #{status,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <select id="selectAll" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user_group
    where client_id = #{clientId} or client_id is null
  </select>
  <select id="selectByUserId" resultMap="BaseResultMap">
    select r.* from user_group r, user_group_rel rr
    where r.id = rr.group_id and rr.user_id = #{userId,jdbcType=INTEGER}
    and (r.client_id = #{clientId,jdbcType=VARCHAR} or r.client_id is null)
  </select>
  <select id="selectByCode" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user_group where code = #{code,jdbcType=VARCHAR}
  </select>
  <select id="selectByExample" parameterType="cn.jia.user.entity.Group" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from user_group
    <where>
      <if test="clientId != null">
        (client_id = #{clientId,jdbcType=VARCHAR} or client_id is null)
      </if>
      <if test="name != null">
        and name LIKE CONCAT('%',#{name,jdbcType=VARCHAR},'%')
      </if>
      <if test="code != null">
        and code LIKE CONCAT('%',#{code,jdbcType=VARCHAR},'%')
      </if>
      <if test="remark != null">
        and remark LIKE CONCAT('%',#{remark,jdbcType=VARCHAR},'%')
      </if>
      <if test="status != null">
        and status = #{status,jdbcType=INTEGER}
      </if>
    </where>
  </select>
</mapper>